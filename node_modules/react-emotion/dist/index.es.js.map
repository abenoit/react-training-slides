{"version":3,"file":"index.es.js","sources":["../../emotion-theming/src/utils.js","../src/index.js"],"sourcesContent":["import PropTypes from 'prop-types'\n\nexport const channel = '__EMOTION_THEMING__'\n\nexport const contextTypes = {\n  [channel]: PropTypes.object\n}\n","/* global codegen */\nimport { createElement, Component } from 'react'\nimport { memoize } from 'emotion-utils'\nimport { css, getRegisteredStyles } from 'emotion'\nimport { channel, contextTypes } from '../../emotion-theming/src/utils'\n\nexport * from 'emotion'\n\nfunction setTheme(theme) {\n  this.setState({ theme })\n}\n\nfunction componentWillMount() {\n  if (this.context[channel] !== undefined) {\n    this.unsubscribe = this.context[channel].subscribe(setTheme.bind(this))\n  }\n}\nfunction componentWillUnmount() {\n  if (this.unsubscribe !== undefined) {\n    this.context[channel].unsubscribe(this.unsubscribe)\n  }\n}\n\nconst reactPropsRegex = codegen.require('./props')\nconst testOmitPropsOnStringTag = memoize(key => reactPropsRegex.test(key))\nconst testOmitPropsOnComponent = key => key !== 'theme' && key !== 'innerRef'\nconst testAlwaysTrue = () => true\n\nconst omitAssign = function(testFn, target) {\n  let i = 2\n  let length = arguments.length\n  for (; i < length; i++) {\n    let source = arguments[i]\n    let key\n    for (key in source) {\n      if (testFn(key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\nconst createStyled = (tag, options: { e: string }) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error(\n        'You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.'\n      )\n    }\n  }\n  let staticClassName = false\n  if (options !== undefined && options.e !== undefined) {\n    staticClassName = options.e\n  }\n  const isReal = tag.__emotion_real === tag\n  const baseTag =\n    staticClassName === false ? (isReal && tag.__emotion_base) || tag : tag\n\n  const omitFn =\n    typeof baseTag === 'string'\n      ? testOmitPropsOnStringTag\n      : testOmitPropsOnComponent\n\n  return (strings, ...interpolations) => {\n    let styles = (isReal && tag.__emotion_styles) || []\n    if (staticClassName === false) {\n      if (strings == null || strings.raw === undefined) {\n        styles = styles.concat(strings, interpolations)\n      } else {\n        styles = interpolations.reduce(\n          (array, interp, i) => array.concat(interp, strings[i + 1]),\n          styles.concat(strings[0])\n        )\n      }\n    }\n\n    class Styled extends Component {\n      render() {\n        const { props, state } = this\n        this.mergedProps = omitAssign(testAlwaysTrue, {}, props, {\n          theme: (state !== null && state.theme) || props.theme || {}\n        })\n\n        let className = ''\n        let classInterpolations = []\n\n        if (props.className) {\n          if (staticClassName === false) {\n            className += getRegisteredStyles(\n              classInterpolations,\n              props.className\n            )\n          } else {\n            className += `${props.className} `\n          }\n        }\n        if (staticClassName === false) {\n          className += css.apply(this, styles.concat(classInterpolations))\n        } else {\n          className += staticClassName\n        }\n\n        return createElement(\n          baseTag,\n          omitAssign(omitFn, {}, props, { className, ref: props.innerRef })\n        )\n      }\n    }\n    Styled.prototype.componentWillMount = componentWillMount\n    Styled.prototype.componentWillUnmount = componentWillUnmount\n    Styled.contextTypes = contextTypes\n    Styled.__emotion_styles = styles\n    Styled.__emotion_base = baseTag\n    Styled.__emotion_real = Styled\n\n    Styled.displayName = `Styled(${typeof baseTag === 'string'\n      ? baseTag\n      : baseTag.displayName || baseTag.name || 'Component'})`\n\n    Styled.withComponent = nextTag => {\n      return createStyled(nextTag, options)(styles)\n    }\n\n    return Styled\n  }\n}\n\nexport default createStyled\n"],"names":["channel","contextTypes","PropTypes","object","setTheme","theme","setState","componentWillMount","context","undefined","unsubscribe","subscribe","bind","componentWillUnmount","reactPropsRegex","testOmitPropsOnStringTag","memoize","test","key","testOmitPropsOnComponent","testAlwaysTrue","omitAssign","testFn","target","i","length","arguments","source","createStyled","tag","options","process","env","NODE_ENV","Error","staticClassName","e","isReal","__emotion_real","baseTag","__emotion_base","omitFn","strings","interpolations","styles","__emotion_styles","raw","concat","reduce","array","interp","Styled","render","props","state","mergedProps","className","classInterpolations","getRegisteredStyles","css","apply","createElement","ref","innerRef","Component","prototype","displayName","name","withComponent","nextTag"],"mappings":"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"}